@page "/EmployeeEdit/{id}/{partitionKey}"
@using BlazorCosmosDemoApp3.Models
@using BlazorCosmosDemoApp3.Services
@inject EmployeeService employeeService
@inject NavigationManager NavManager

@rendermode InteractiveServer

<div class="card p-4">
    <h3>Edit Employee Form</h3>
    @if (employee != null)
    {
        <EditForm Model="@employee" OnValidSubmit="@UpdateRecord" FormName="editForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row p-2">
                <div class="col-md-6">
                    <label>Name</label>
                    <InputText class="form-control" @bind-Value="employee.Name" />
                </div>
                <div class="col-md-6">
                    <label>Department</label>
                    <InputText class="form-control" @bind-Value="employee.Department" readonly />
                </div>
            </div>

            <div class="form-group row p-2">
                <div class="col-md-6">
                    <label>Email</label>
                    <InputText class="form-control" @bind-Value="employee.Email" />
                </div>
                <div class="col-md-6">
                    <label>Salary</label>
                    <InputNumber class="form-control" @bind-Value="employee.Salary" />
                </div>
            </div>

            <div class="form-group row p-2">
                <div class="text-center">
                    <button class="btn btn-primary" type="submit">Update</button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div>Loading...</div>
    }
</div>

@code {
    private EmployeeModel? employee;

    [Parameter]
    public string? id { get; set; }
    [Parameter]
    public string? partitionKey { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(id) && !string.IsNullOrEmpty(partitionKey))
        {
            employee = await employeeService.GetEmployeeDetailsById(id, partitionKey);
        }
    }

    private async Task UpdateRecord()
    {
        if (employee == null) return;

        Console.WriteLine("You have given : " + employee.Name +" " + employee.Email);
        await employeeService.UpdateEmployee(employee);

        NavManager.NavigateTo("/");
    }
}